<?php
/**
 * cloudxxx-api (http://www.cloud.xxx)
 *
 * Copyright (C) 2014 Really Useful Limited.
 * Proprietary code. Usage restrictions apply.
 *
 * @copyright  Copyright (C) 2014 Really Useful Limited
 * @license    Proprietary
 */

namespace Cloud\Silex\Provider;

use DomainException;
use Silex\Application;
use Silex\ServiceProviderInterface;

class OpsWorksServiceProvider implements ServiceProviderInterface
{
    /**
     * {@inheritDoc}
     */
    public function register(Application $app)
    {
        /**
         * Include opsworks.php autogenerated configuration
         */
        $app['opsworks.autoload'] = $app->protect(function () use ($app) {
            if (class_exists('OpsWorks', false)) {
                return;
            }

            if (!file_exists('opsworks.php')) {
                throw new DomainException('OpsWorks configuration file `opsworks.php` not found');
            }

            require_once 'opsworks.php';
        });

        /**
         * Get the OpsWorks configuration object
         */
        $app['opsworks'] = $app->share(function () use ($app) {
            $app['opsworks.autoload']();
            return new \OpsWorks();
        });

        /**
         * Get OpsWorks configuration overrides
         */
        $app['opsworks.config'] = $app->share(function () use ($app) {
            $opsworks = $app['opsworks'];

            return [
                'db' => [
                    'host'     => $opsworks->db->host,
                    'dbname'   => $opsworks->db->database,
                    'user'     => $opsworks->db->username,
                    'password' => $opsworks->db->password,
                    'charset'  => $opsworks->db->encoding,
                ],
                //'aws' => [
                    //'key'    => ...,
                    //'secret' => ...,
                //],
            ];
        });
    }

    /**
     * {@inheritDoc}
     */
    public function boot(Application $app)
    {
    }
}

